{"version":3,"sources":["services/firebase.ts","store/actions/auth.ts","store/actions/types.ts","components/icons/index.tsx","components/login/Message.tsx","components/login/Login.tsx","store/actions/label.ts","components/EditLabelsModal.tsx","components/LeftNavbar.tsx","store/actions/note.ts","components/notes/NoteActions.tsx","components/notes/AddNoteForm.tsx","components/notes/NoteItem.tsx","components/notes/NotesList.tsx","components/notes/NotesArea.tsx","components/Main.tsx","components/navbar/Profile.tsx","components/navbar/SearchBar.tsx","components/Logo.tsx","components/navbar/AppBar.tsx","components/theme.ts","components/Loading.tsx","App.tsx","store/actions/database.ts","store/reducers/authReducer.ts","store/reducers/labelsReducer.ts","store/reducers/notesReducer.ts","store/reducers/index.ts","store/index.ts","index.tsx"],"names":["firebase","apiKey","authDomain","databaseURL","db","auth","setAuthInProgress","payload","type","setAuthMessage","authSuccess","user","LabelIcon","react_default","a","createElement","xmlns","width","height","viewBox","fill","d","NoteIcon","ColorPaletteIcon","props","bgColor","ColorPaletteIconChecked","checkMarkColor","className","KeepIcon","transform","useStyles","makeStyles","theme","errorIcon","paddingRight","spacing","Message","message","styles","color","Box","display","alignItems","padding","border","concat","borderRadius","my","ErrorOutline_default","Typography","variant","InputField","handleChange","label","name","inputType","TextField","onChange","margin","required","fullWidth","LoginWithRouter","withRouter","React","Component","[object Object]","args","super","this","state","password","email","userName","onInputFieldChange","event","setState","target","value","sumbitForm","preventDefault","_this$props","signup","signin","resetpassword","_this$state","pathName","location","pathname","slice","render","_this$props2","loading","authMessage","authMessageType","classes","signupMode","signinMode","resetpasswordMode","getFormTitle","Container","component","maxWidth","CssBaseline","paper","form","noValidate","onSubmit","LinearProgress","linearProgress","login_Message","Button","submit","disabled","Grid","container","item","xs","react_router_dom","to","connect","inProgress","isLoggedIn","dispatch","createUserWithEmailAndPassword","then","currentUser","updateProfile","displayName","catch","error","signInWithEmailAndPassword","sendPasswordResetEmail","withStyles","marginTop","flexDirection","avatar","backgroundColor","palette","secondary","main","addLabel","userID","labelName","callback","ref","push","deleteLabel","labelID","remove","isModalOpen","labels","closeModal","Dialog","open","onClose","DialogTitle","DialogContent","style","minWidth","map","index","key","IconButton","size","onClick","Delete","marginLeft","createStyles","appBarShift","transition","transitions","create","easing","sharp","duration","enteringScreen","hide","drawer","flexShrink","whiteSpace","navBarOpen","navBarClose","navbarContainer","top","leavingScreen","overflowX","&:hover","content","flexGrow","navItemBtn","paddingLeft","overflow","navItemBtnOpen","navItemIcon","navTransition","LeftNavbar","setLabel","isNavBarOpen","_React$useState","useTheme","useState","_React$useState2","Object","slicedToArray","_React$useState3","_React$useState4","isLabelsEditModalOpen","openLabelsEditModal","_useState","_useState2","Fragment","Drawer","docked","List","ListItem","button","root","ListItemIcon","ListItemText","primary","length","EditOutlined","components_EditLabelsModal","editNote","fieldName","deleteNote","noteID","noteActionsWrapper","justifyContent","popover","background","default","colorCheckbox","borderColor","notePaletteColors","firstColorIcon","firstIconBorderColor","colorCheckboxIcon","colorCheckboxWrapper","flexWrap","labelSearchInput","noteLabelContainer","labelInputText","fontWeight","newLabelWrapper","fontSize","newLabelBtn","labelIconCheckbox","closeButton","lineHeight","actionIcon","onCloseButtonClick","selectedLabels","choosenColor","showDeleteBtn","showCloseBtn","paletteIconRef","useRef","labelIconRef","isOpen","setOpen","_useState3","_useState4","isLabelPopoverOpen","setLabelPopoverOpen","_useState5","_useState6","setLabelName","noteBackgroundColors","noteBackground","onLabelAddSuccess","filteredLabels","filter","toLowerCase","includes","allowAddLabel","haveSameLabel","some","checkLabel","Tooltip","title","buttonRef","Palette","Label","DeleteOutlineOutlined","Popover","anchorOrigin","vertical","horizontal","transformOrigin","anchorEl","current","keys","Checkbox","checked","update","onColorChange","icon","checkedIcon","InputBase","placeholder","inputProps","maxLength","Search","Divider","AddOutlined","dense","newLabelsID","id","labelsID","handleLabelClick","edge","noteCreateContainer","wrapper","flexFlow","noteTitleRoot","noteTitleInput","verticalAlign","text","noteColor","isFocused","noteBody","setIsFocused","noteTitle","Paper","elevation","Collapse","wrapperInner","in","collapsedHeight","input","onFocus","multiline","notes_NoteActions","position","wordBreak","itemActions","labelsList","labelItem","cursor","note","labelColor","marginRight","marginBottom","noteItem","paddingBottom","setNoteEditPopup","_props$note","body","NoteList","filteredNotes","notes_NoteItem","dialogContentRoot","notesArray","items","newNoteTitle","newNote","newNoteBody","newNoteColor","newNoteLabels","editingNoteTitle","editingNote","editingNoteBody","editingNoteColor","editingNoteLabels","editingNoteID","editNoteMode","updateNote","updatedNote","finally","createNote","currentLabel","addToSelectedLabels","onAddLabelClick","notes_AddNoteForm","NotesList","mainArea","components_LeftNavbar","notes_NotesArea","shape","iconColor","bottom","userEmail","signout","signOut","popoverOpenHandler","Avatar","FaceOutlined","searchbarContainer","breakpoints","up","searchbarContainerActive","searchIcon","inputSearch","SearchBar","onSearchClose","setFocused","ClickAwayListener","onClickAway","bgcolor","boxShadow","Close","logoContainer","Logo","noWrap","grow","containerBorder","borderBottomWidth","menuButton","logo","themeColor","light","switchTheme","setNavBarOpen","isMobile","useMediaQuery","down","isSearchActive","setSearchActive","isProfilePopoverOpen","setProfilePopoverOpen","profileIconRef","AppBar","Toolbar","aria-label","Menu","navbar_SearchBar","components_Logo","Brightness4","RootRef","rootRef","AccountCircleOutlined","navbar_Profile","fontFamilyRoboto","fontFamily","join","lightMuiTheme","createMuiTheme","red","orange","yellow","green","cyan","lightblue","darkblue","purple","pink","brown","grey","amber","A400","typography","objectSpread2","overline","zIndex","appBar","darkMuiTheme","overrides","MuiListItemText","responsiveFontSizes","dark","progress","Loading","CircularProgress","configDatabase","uid","on","snap","val","labelsArray","forEach","element","isDarkMode","setThemeMode","isAuthenticating","setIsAuthenticating","useEffect","unsubscribe","onAuthStateChanged","components_Loading","ThemeProvider","navbar_AppBar","components_Main","login_Login","InitialState","authReducer","action","messageType","labelsReducer","notesReducer","currentForm","appReducer","combineReducers","rootReducer","undefined","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","rootElement","document","getElementById","ReactDOM","es","src_App"],"mappings":"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","file":"static/js/main.33e273a9.chunk.js","sourcesContent":["import * as firebase from \"firebase\";\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyA4TP-8VLi3IDeBrc2CFISIc9RreX1WBxE\",\r\n  authDomain: \"isaev-react-app.firebaseapp.com\",\r\n  databaseURL: \"https://isaev-react-app.firebaseio.com\",\r\n  // projectId: \"isaev-react-app\",\r\n  // storageBucket: \"isaev-react-app.appspot.com\",\r\n  // messagingSenderId: \"1091715721095\",\r\n  // appId: \"1:1091715721095:web:29a76b20cd74e59009d522\"\r\n};\r\n// const databaseRef = firebase.database().ref();\r\n// databaseRef.child(\"todos\");\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const db = firebase.database();\r\nexport const auth = firebase.auth();","import { Action } from \"redux\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\n\r\nimport { SIGNIN_SUCCESS, AUTH_ERROR_MESSAGE, AUTH_IN_PROGRESS, SIGNOUT_SUCCESS } from \"./types\";\r\n\r\nimport { auth } from \"services/firebase\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const setAuthInProgress = (payload: boolean) => {\r\n  return {\r\n    type: AUTH_IN_PROGRESS,\r\n    payload\r\n  };\r\n};\r\nexport const setAuthMessage = (payload: any) => ({\r\n  type: AUTH_ERROR_MESSAGE,\r\n  payload: payload\r\n});\r\n\r\nexport const authSuccess = (user: any) => ({\r\n  type: SIGNIN_SUCCESS,\r\n  payload: user\r\n});\r\n\r\nexport const signoutSuccess = () => ({\r\n  type: SIGNOUT_SUCCESS\r\n});\r\n\r\nexport const signin = (email: string, password: string) => (\r\n  dispatch: ThunkDispatch<{}, {}, any>\r\n) => {\r\n  dispatch(setAuthInProgress(true));\r\n  dispatch(setAuthMessage(\"\"));\r\n  auth\r\n    .signInWithEmailAndPassword(email, password)\r\n    .then(() => {\r\n      dispatch(setAuthInProgress(false));\r\n      dispatch(authSuccess(auth.currentUser));\r\n    })\r\n    .catch(error => {\r\n      dispatch(setAuthMessage(error.message));\r\n      dispatch(setAuthInProgress(false));\r\n    });\r\n};\r\n\r\nexport const signout = () => (\r\n  dispatch: ThunkDispatch<{}, {}, any>\r\n) => {\r\n  auth\r\n    .signOut()    \r\n    .then(() => {\r\n      dispatch(signoutSuccess());\r\n    })\r\n    .catch(error => {\r\n      \r\n    });\r\n};\r\n\r\n\r\n\r\nexport const signup = (email: string, password: string, userName: string) => (\r\n  dispatch: ThunkDispatch<{}, {}, any>\r\n) => {\r\n  dispatch(setAuthInProgress(true));\r\n  dispatch(setAuthMessage(\"\"));\r\n  auth\r\n    .createUserWithEmailAndPassword(email, password)\r\n    .then(() => {\r\n      if (auth.currentUser) {\r\n        auth.currentUser.updateProfile({ displayName: userName });\r\n        dispatch(setAuthInProgress(false));\r\n        dispatch(authSuccess(auth.currentUser));\r\n      }\r\n    })\r\n    .catch(error => {\r\n      dispatch(setAuthMessage(error.message));\r\n      dispatch(setAuthInProgress(false));\r\n    });\r\n};\r\n\r\n\r\nexport const resetpassword = (email: string) => (\r\n  dispatch: ThunkDispatch<{}, {}, any>\r\n) => {\r\n  dispatch(setAuthInProgress(true));\r\n  dispatch(setAuthMessage(\"\"));\r\n  auth\r\n    .sendPasswordResetEmail(email)\r\n    .then(() => {\r\n        const msg = \"We have sent you an email with link to reset password\";\r\n        dispatch(setAuthMessage({message: msg, authMessageType: \"success\"}));\r\n        dispatch(setAuthInProgress(false));\r\n    })\r\n    .catch(error => {\r\n      dispatch(setAuthMessage({message: error.message, authMessageType: \"error\"}));\r\n      dispatch(setAuthInProgress(false));\r\n    });\r\n};\r\n","// SIGN IN\r\nexport const SIGNIN_SUCCESS = \"SIGNIN_SUCCESS\";\r\nexport const SIGNIN_ERROR = \"SIGNIN_ERROR\";\r\n\r\n// SIGN UP\r\nexport const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\r\nexport const SIGNUP_ERROR = \"SIGNUP_ERROR\";\r\n\r\n// SIGN OUT\r\nexport const SIGNOUT_SUCCESS = \"SIGNOUT_SUCCESS\";\r\nexport const SIGNOUT_ERROR = \"SIGNOUT_ERROR\";\r\n\r\n// PASSWORD RESET\r\nexport const RESET_SUCCESS = \"RESET_SUCCESS\";\r\nexport const RESET_ERROR = \"RESET_ERROR\";\r\n\r\n\r\nexport const AUTH_IN_PROGRESS = 'AUTH_IN_PROGRESS';\r\nexport const AUTH_ERROR_MESSAGE = 'AUTH_ERROR_MESSAGE';\r\n\r\n\r\nexport const LABELS_RECEIVED = 'LABELS_RECEIVED';\r\n\r\nexport const NOTES_RECEIVED = 'NOTES_RECEIVED';\r\nexport const EMPTY_NOTES = 'EMPTY_NOTES';","import React from \"react\";\r\n\r\nexport const LabelIcon = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <path d=\"M17.63 5.84C17.27 5.33 16.67 5 16 5L5 5.01C3.9 5.01 3 5.9 3 7v10c0 1.1.9 1.99 2 1.99L16 19c.67 0 1.27-.33 1.63-.84L22 12l-4.37-6.16zM16 17H5V7h11l3.55 5L16 17z\"></path>\r\n  </svg>\r\n);\r\n\r\nexport const NoteIcon = () => (\r\n  <svg\r\n    fill=\"currentColor\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n  >\r\n    <path d=\"M9 21c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-1H9v1zm3-19C8.14 2 5 5.14 5 9c0 2.38 1.19 4.47 3 5.74V17c0 .55.45 1 1 1h6c.55 0 1-.45 1-1v-2.26c1.81-1.27 3-3.36 3-5.74 0-3.86-3.14-7-7-7zm2.85 11.1l-.85.6V16h-4v-2.3l-.85-.6A4.997 4.997 0 0 1 7 9c0-2.76 2.24-5 5-5s5 2.24 5 5c0 1.63-.8 3.16-2.15 4.1z\"></path>\r\n  </svg>\r\n);\r\n\r\n\r\ninterface IColorPaletteIcon {\r\n  bgColor?: string;\r\n  checkMarkColor?: string;\r\n  className?: string;\r\n}\r\nexport const ColorPaletteIcon = (props: IColorPaletteIcon) => (\r\n  <svg\r\n  height=\"100%\"\r\n  width=\"100%\"\r\n  xmlns=\"http://www.w3.org/2000/svg\"\r\n  viewBox=\"0 0 18 18\"\r\n>\r\n  <path fill={props.bgColor} d=\"m0 0h18v18h-18z\"></path>\r\n</svg>\r\n);\r\n\r\n\r\nexport const ColorPaletteIconChecked = (props: IColorPaletteIcon) => {\r\n  return (\r\n    <svg\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 18 18\"\r\n    >\r\n      <path fill={props.checkMarkColor}  d=\"m0 0h18v18h-18z\"></path>\r\n      <path\r\n        className={props.className}\r\n        d=\"m6.61 11.89l-3.11-3.11-1.06 1.06 4.17 4.16 8.95-8.95-1.06-1.05z\"\r\n      ></path>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport const KeepIcon =  () => (<svg  height=\"40\" width=\"40\" viewBox=\"0 0 512 512\"  xmlns=\"http://www.w3.org/2000/svg\"><g><path d=\"m284.053 317.287h193.747v127.279h-193.747z\" fill=\"#fdde80\" transform=\"matrix(.707 -.707 .707 .707 -157.785 380.926)\"/><path d=\"m512 315c0 33.137-26.863 60-60 60h-77v77c0 33.137-26.863 60-60 60h-59l-111-256 111-256h256z\" fill=\"#f8a808\"/><path d=\"m0 0h256v512h-256z\" fill=\"#fbbd00\"/><path d=\"m256 75-10 15 10 15c58.448 0 106 47.551 106 106 0 43.576-26.135 82.21-66.582 98.426l-9.418 3.776v33.798h-30l-10 15 10 15h30v30h-30l-10 15 10 15h60v-103.922c20.87-10.254 38.728-25.656 52.054-44.992 15.666-22.731 23.946-49.386 23.946-77.086 0-74.991-61.01-136-136-136z\" fill=\"#e3e7ea\"/><path d=\"m226 407v-30h30v-30h-30v-33.798l-9.418-3.776c-40.447-16.216-66.582-54.85-66.582-98.426 0-58.449 47.552-106 106-106v-30c-74.99 0-136 61.009-136 136 0 27.7 8.28 54.355 23.946 77.086 13.326 19.335 31.184 34.738 52.054 44.992v103.922h60v-30z\" fill=\"#fff\"/></g></svg>);","import React from 'react';\r\nimport {Box, Typography} from '@material-ui/core';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  errorIcon: {\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\ninterface Props {\r\n  message: string;\r\n  type: string;\r\n}\r\n\r\nconst Message: React.FC<Props> = ({message, type}) => {\r\n  const styles = useStyles();\r\n  const color = type === 'success' ? 'red' : 'blue';\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      alignItems=\"center\"\r\n      padding={1}\r\n      border={`1px solid ${color}`}\r\n      borderRadius={4}\r\n      my={1}      \r\n      color={color}\r\n    >\r\n      <ErrorOutlineIcon color=\"inherit\" className={styles.errorIcon} />\r\n      <Typography variant=\"caption\" color=\"inherit\">\r\n        {message}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport {\r\n  withStyles,\r\n  Container,\r\n  Button,\r\n  TextField,\r\n  Grid,\r\n  Typography,\r\n  CssBaseline,\r\n  LinearProgress\r\n} from \"@material-ui/core\";\r\n\r\nimport {KeepIcon} from \"components/icons\";\r\n\r\nimport { auth } from \"services/firebase\";\r\nimport { signup, signin, authSuccess, resetpassword } from \"store/actions/auth\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Message from \"components/login/Message\";\r\nimport { withRouter, Link, RouteComponentProps } from \"react-router-dom\";\r\n\r\nconst styles = (theme: any) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\" as \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  },\r\n  linearProgress: {\r\n    marginTop: theme.spacing(1)\r\n  }\r\n});\r\n\r\ninterface InputFieldProps {\r\n  handleChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  label: string;\r\n  name: string;\r\n  inputType: string;\r\n}\r\n\r\nconst InputField: React.FC<InputFieldProps> = ({\r\n  handleChange,\r\n  label,\r\n  name,\r\n  inputType\r\n}) => {\r\n  return (\r\n    <TextField\r\n      onChange={handleChange}\r\n      variant=\"outlined\"\r\n      margin=\"normal\"\r\n      required\r\n      fullWidth\r\n      label={label}\r\n      name={name}\r\n      type={inputType}\r\n\r\n    />\r\n  );\r\n};\r\n\r\ninterface IProps {\r\n  user: any;\r\n  classes: any;\r\n  authMessage: string;\r\n  authMessageType: string;\r\n  loading: boolean;\r\n  isLoggedIn: boolean;\r\n  location: any;\r\n  signup: (email: string, password: string, userName: string) => void;\r\n  signin: (email: string, password: string) => void;\r\n  resetpassword: (email: string) => void;\r\n  authSuccess: (uesr: any) => void;\r\n}\r\n\r\nclass Login extends React.Component<IProps> {\r\n  state = {\r\n    password: \"\",\r\n    email: \"\",\r\n    userName: \"\"\r\n  };\r\n\r\n  onInputFieldChange = (\r\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  \r\n\r\n  sumbitForm = (event: React.ChangeEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    const { signup, signin, resetpassword } = this.props;\r\n    const { email, password, userName } = this.state;\r\n    const pathName = this.props.location.pathname.slice(1);\r\n    if (pathName === \"signup\") {\r\n      return signup(email, password, userName);\r\n    } else if (pathName === \"resetpassword\") {\r\n      return resetpassword(email);      \r\n    } else {\r\n      return signin(email, password);      \r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { loading, authMessage, authMessageType, classes } = this.props;\r\n    const path = this.props.location.pathname; //\"/login\".slice(1)\r\n    const pathName = path.slice(1);\r\n\r\n    const signupMode = pathName === \"signup\";\r\n    const signinMode = pathName === \"signin\" ||  pathName === '';\r\n    const resetpasswordMode = pathName === \"resetpassword\";\r\n\r\n    \r\n\r\n    const getFormTitle = () => {\r\n      switch (pathName) {\r\n        case \"signup\":\r\n          return \"Sign Up\";\r\n        case \"resetpassword\":\r\n          return \"Rest Password\";\r\n        default:\r\n          return \"Sign In\";\r\n      }\r\n    };\r\n\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <KeepIcon />\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            {getFormTitle()}\r\n          </Typography>\r\n          <form className={classes.form} noValidate onSubmit={this.sumbitForm}>\r\n            {signupMode && (\r\n              <InputField\r\n                handleChange={this.onInputFieldChange}\r\n                label=\"Username\"\r\n                name=\"userName\"\r\n                inputType=\"text\"\r\n              />\r\n            )}\r\n\r\n            <InputField\r\n              handleChange={this.onInputFieldChange}\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              inputType=\"text\"\r\n            />\r\n\r\n            {!resetpasswordMode && (\r\n              <InputField\r\n                handleChange={this.onInputFieldChange}\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                inputType=\"password\"\r\n                \r\n              />\r\n            )}\r\n\r\n            {loading && <LinearProgress className={classes.linearProgress} />}\r\n            {authMessage && (\r\n              <Message message={authMessage} type={authMessageType} />\r\n            )}\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"inherit\"\r\n              className={classes.submit}\r\n              disabled={loading ? true : false}\r\n            >\r\n              {getFormTitle()}\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link to=\"/resetpassword\">Forgot password?</Link>\r\n              </Grid>\r\n              <Grid item>\r\n                {signinMode ? (\r\n                  <Link to=\"/signup\">Don't have an account? Sign Up</Link>\r\n                ) : (\r\n                  <Link to=\"/signin\">Sign In</Link>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst LoginWithRouter = withRouter<RouteComponentProps<any>, any>(Login);\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  loading: state.auth.inProgress,\r\n  authMessage: state.auth.authMessage,\r\n  authMessageType: state.auth.authMessageType,\r\n  isLoggedIn: state.auth.user.isLoggedIn\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  signup: (email: string, password: string, userName: string) =>\r\n    dispatch(signup(email, password, userName)),\r\n  signin: (email: string, password: string) =>\r\n    dispatch(signin(email, password)),\r\n  authSuccess: (user: any) => dispatch(authSuccess(user)),\r\n  resetpassword: (email: string) => dispatch(resetpassword(email))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(LoginWithRouter));\r\n","import { db } from \"../../services/firebase\";\r\n\r\n\r\n\r\nexport const addLabel = (userID: string, labelName: string, callback: Function) => {\r\n db.ref(`labels/${userID}`)\r\n .push({ labelName })\r\n .then(() => callback());\r\n}\r\n\r\n\r\nexport const deleteLabel = (userID: string, labelID: string) => {\r\n db.ref(`labels/${userID}/${labelID}`).remove();\r\n}","import React from \"react\";\r\n\r\n\r\nimport {\r\n  IconButton,\r\n  Typography,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Box,\r\n} from \"@material-ui/core\";\r\n\r\nimport { Delete } from \"@material-ui/icons\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { deleteLabel } from \"store/actions/label\";\r\n\r\nconst EditLabelsModal: React.FC<{\r\n  isModalOpen: boolean;\r\n  labels?: object[];\r\n  userID: string;\r\n  closeModal: (val: boolean) => void;\r\n  deleteLabel: (userID: string, labelID: string) => void;\r\n}> = ({ isModalOpen, deleteLabel, labels = [], closeModal, userID }) => {\r\n  return (\r\n    <Dialog open={isModalOpen} onClose={() => closeModal(false)}>\r\n      <DialogTitle>Edit labels</DialogTitle>\r\n      <DialogContent style={{\r\n       minWidth: \"500px\",\r\n       maxWidth: '80%'\r\n      }}>\r\n          {labels.map((label: any, index: number) => (\r\n            <Box display=\"flex\" alignItems=\"center\" key={index} >\r\n              <IconButton\r\n              size=\"small\"           \r\n                onClick={() => {\r\n                  deleteLabel(userID, label.labelID);\r\n                }}\r\n              >\r\n                <Delete />\r\n              </IconButton>\r\n              <Typography style={{\r\n               marginLeft: '1rem'\r\n              }}>{label.labelName}</Typography>\r\n            </Box>\r\n          ))}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  userID: state.auth.user.userID,\r\n});\r\n\r\nconst mapDispatchToProps = () => ({\r\n  deleteLabel,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditLabelsModal);\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  createStyles,\r\n  makeStyles,\r\n  useTheme,\r\n  Theme,\r\n} from \"@material-ui/core/styles\";\r\nimport {\r\n  Drawer,\r\n  List,  \r\n} from \"@material-ui/core\";\r\n\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport { Label, EditOutlined, Delete } from \"@material-ui/icons\";\r\nimport { LabelIcon, NoteIcon } from \"components/icons\";\r\n\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport { db } from \"../services/firebase\";\r\nimport EditLabelsModal from \"./EditLabelsModal\";\r\n\r\nconst minWidth = 80;\r\nconst maxWidth = 280;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    appBarShift: {\r\n      width: `100%`,\r\n      transition: theme.transitions.create([\"width\", \"margin\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    hide: {\r\n      display: \"none\",\r\n    },\r\n    drawer: {\r\n      width: maxWidth,\r\n      flexShrink: 0,\r\n      whiteSpace: \"nowrap\",\r\n    },\r\n    navBarOpen: {\r\n      width: maxWidth,\r\n    },\r\n    navBarClose: {\r\n      width: minWidth,\r\n    },\r\n    navbarContainer: {\r\n      minWidth: \"65px\",\r\n      top: \"65px\",\r\n      border: \"none\",\r\n      backgroundColor: \"transparent\",\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      overflowX: \"hidden\",\r\n      // width: `${minWidth}px`,\r\n      \"&:hover\": {\r\n        width: `${maxWidth}px`,\r\n      },\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n    navItemBtn: {\r\n      padding: 0,\r\n      paddingLeft: \"12px\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      width: \"48px\",\r\n      height: \"48px\",\r\n      overflow: \"hidden\",\r\n      borderRadius: \"0 25px 25px 0\",\r\n      // borderRadius: \"50%\",\r\n      \"&:hover\": {\r\n        width: \"100%\",\r\n        // borderRadius: \"0 25px 25px 0\",\r\n      },\r\n    },\r\n    navItemBtnOpen: {\r\n      width: \"100%\",\r\n    },\r\n    navItemIcon: {\r\n      padding: theme.spacing(0, 1.5),\r\n    },\r\n    navTransition: {\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n  })\r\n);\r\n\r\nconst LeftNavbar: React.FC<{\r\n  isNavBarOpen: boolean;\r\n  setLabel: (label: string) => void;\r\n  labels?: object[];\r\n}> = ({ setLabel, isNavBarOpen, labels = [] }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [isLabelsEditModalOpen, openLabelsEditModal] = React.useState(false);\r\n  const [isReady, setReady] = useState(false);\r\n\r\n  const handlenavBarOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.navbarContainer,\r\n          docked: classes.navTransition,\r\n        }}\r\n        className={isNavBarOpen ? classes.navBarOpen : classes.navBarClose}\r\n      >\r\n        <List>\r\n          <ListItem\r\n            onClick={() => setLabel(\"all\")}\r\n            button\r\n            classes={{\r\n              root: classes.navItemBtn,\r\n            }}\r\n            className={isNavBarOpen ? classes.navItemBtnOpen : \"\"}\r\n          >\r\n            <ListItemIcon\r\n              classes={{\r\n                root: classes.navItemIcon,\r\n              }}\r\n            >\r\n              <NoteIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={\"notes\"} />\r\n          </ListItem>\r\n          {labels.map((label: any) => (\r\n            <ListItem\r\n              onClick={() => setLabel(label.labelID)}\r\n              button\r\n              key={label.labelID}\r\n              classes={{\r\n                root: classes.navItemBtn,\r\n              }}\r\n              className={isNavBarOpen ? classes.navItemBtnOpen : \"\"}\r\n            >\r\n              <ListItemIcon\r\n                classes={{\r\n                  root: classes.navItemIcon,\r\n                }}\r\n              >\r\n                <LabelIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={label.labelName} />\r\n            </ListItem>\r\n          ))}\r\n          {labels.length ? (\r\n            <ListItem\r\n              onClick={() => {\r\n                openLabelsEditModal(true);\r\n              }}\r\n              button\r\n              classes={{\r\n                root: classes.navItemBtn,\r\n              }}\r\n              className={isNavBarOpen ? classes.navItemBtnOpen : \"\"}\r\n            >\r\n              <ListItemIcon\r\n                classes={{\r\n                  root: classes.navItemIcon,\r\n                }}\r\n              >\r\n                <EditOutlined />\r\n              </ListItemIcon>\r\n              <ListItemText primary={\"Edit labels\"} />\r\n            </ListItem>\r\n          ) : null}\r\n        </List>\r\n        <EditLabelsModal\r\n          isModalOpen={isLabelsEditModalOpen}\r\n          labels={labels}\r\n          closeModal={openLabelsEditModal}\r\n        />\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\nexport default LeftNavbar;\r\n","import { db } from \"../../services/firebase\";\r\n\r\nexport const editNote = (fieldName: string, value: any) => (dispatch: any) => {\r\n  dispatch({\r\n    type: \"EDIT_NOTE\",\r\n    payload: {\r\n      fieldName,\r\n      value: value,\r\n    },\r\n  });\r\n};\r\n\r\nexport const setNoteEditPopup = (note: any) => ({\r\n  type: \"NOTE_EDIT_POPUP\",\r\n  payload: note,\r\n});\r\n\r\nexport const closeNoteEditPopup = () => ({\r\n  type: \"CLOSE_NOTE_EDIT_POPUP\",\r\n});\r\n\r\nexport const updateNote = (\r\n  userID: string,\r\n  noteID: string,\r\n  updatedNote: any\r\n) => (dispatch: any) => {\r\n  db.ref(`notes/${userID}/${noteID}`)\r\n    .update(updatedNote)\r\n    .finally(() => {\r\n      dispatch(closeNoteEditPopup());\r\n    });\r\n};\r\n\r\nexport const deleteNote = (userID: string, noteID: string) => {\r\n  db.ref(`notes/${userID}/${noteID}`).remove();\r\n};\r\n\r\nexport const createNote = (\r\n  userID: string,\r\n  newNote: any\r\n) => (dispatch: any) => {\r\n  db.ref(`notes/${userID}`)\r\n    .push(newNote)\r\n    .then(() => {\r\n      //dispatch(closeNoteEditPopup());\r\n    });\r\n};\r\n\r\n","import React, { useState, useRef } from \"react\";\r\nimport {\r\n  makeStyles,\r\n  InputBase,\r\n  Tooltip,\r\n  IconButton,\r\n  Popover,\r\n  useTheme,\r\n  Checkbox,\r\n  Button,\r\n  Typography,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Palette as PaletteIcon,\r\n  Label,\r\n  Search as SearchIcon,\r\n  AddOutlined,\r\n  DeleteOutlineOutlined as DeleteIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nimport { editNote, deleteNote } from \"store/actions/note\";\r\nimport { addLabel } from \"store/actions/label\";\r\n\r\nimport { ColorPaletteIcon, ColorPaletteIconChecked } from \"components/icons\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { db } from \"../../services/firebase\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  noteActionsWrapper: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"flex-end\",\r\n    margin: theme.spacing(0.5, 1),\r\n  },\r\n  popover: {\r\n    width: theme.spacing(17),\r\n    height: theme.spacing(13),\r\n    borderRadius: theme.spacing(0.5),\r\n    background: theme.palette.background.default,\r\n    padding: theme.spacing(0, 0.4),\r\n  },\r\n  colorCheckbox: {\r\n    height: \"26px\",\r\n    width: \"26px\",\r\n    margin: \"2px\",\r\n    padding: 0,\r\n    borderRadius: \"50%\",\r\n    overflow: \"hidden\",\r\n    border: \"2px solid transparent\",\r\n    transition: \"visibility 0s ease 0ms,opacity .218s linear\",\r\n    \"&:hover\": {\r\n      borderColor: `${theme.notePaletteColors.borderColor} !important`,\r\n    },\r\n  },\r\n  firstColorIcon: {\r\n    borderColor: `${theme.notePaletteColors.firstIconBorderColor} !important`,\r\n  },\r\n  checkMarkColor: {\r\n    fill: theme.notePaletteColors.checkMarkColor,\r\n  },\r\n  colorCheckboxIcon: {\r\n    width: theme.spacing(4),\r\n    height: theme.spacing(4),\r\n  },\r\n  colorCheckboxWrapper: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    flexWrap: \"wrap\" as \"wrap\",\r\n  },\r\n  labelSearchInput: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\" as \"row\",\r\n    alignItems: \"center\",\r\n    padding: \"5px\",\r\n  },\r\n  noteLabelContainer: {\r\n    padding: theme.spacing(1.5),\r\n    background: theme.palette.primary.main,\r\n  },\r\n  labelInputText: {\r\n    fontWeight: 400,\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  newLabelWrapper: {\r\n    fontSize: theme.spacing(0.8),\r\n  },\r\n  newLabelBtn: {\r\n    marginTop: theme.spacing(0.4),\r\n  },\r\n  labelIconCheckbox: {\r\n    minWidth: \"auto\",\r\n  },\r\n  closeButton: {\r\n    padding: theme.spacing(1, 3),\r\n    lineHeight: \"1.25\",\r\n  },\r\n  actionIcon: {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst NoteActions: React.FC<{\r\n  choosenColor: string | number;\r\n  userID: string;\r\n  noteID?: string;\r\n  labels: [];\r\n  selectedLabels: string[];\r\n  onCloseButtonClick: (event: any) => void;\r\n  editNote: (fieldName: string, value: any) => void;\r\n  deleteNote: (userID: string, noteID: string) => void;\r\n  addLabel: Function;\r\n  showDeleteBtn?: boolean;\r\n  showCloseBtn?: boolean;\r\n}> = ({\r\n  onCloseButtonClick,\r\n  editNote,\r\n  addLabel,\r\n  selectedLabels = [],\r\n  choosenColor,\r\n  labels,\r\n  userID,\r\n  noteID,\r\n  deleteNote,\r\n  showDeleteBtn = false,\r\n  showCloseBtn = false\r\n}) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const paletteIconRef = useRef();\r\n  const labelIconRef = useRef();\r\n  const [isOpen, setOpen] = useState(false);\r\n  const [isLabelPopoverOpen, setLabelPopoverOpen] = useState(false);\r\n  const [labelName, setLabelName] = useState(\"\");\r\n  const noteBackgroundColors = theme.notePaletteColors.noteBackground;\r\n\r\n  const onLabelAddSuccess = () => {\r\n    setLabelName(\"\");\r\n  };\r\n\r\n  const filteredLabels = labels.filter((label: any) => {\r\n    return (\r\n      labelName === \"\" ||\r\n      label.labelName.toLowerCase().includes(labelName.toLowerCase())\r\n    );\r\n  });\r\n\r\n  const checkLabel = (): boolean => {\r\n    const haveSameLabel = labels.some((label: any) => {\r\n      return label.labelName.toLowerCase() === labelName.toLowerCase();\r\n    });\r\n    return !!labelName && !haveSameLabel;\r\n  };\r\n\r\n  const allowAddLabel: boolean = checkLabel();\r\n\r\n  const handleLabelClick = (labelID: string) => {\r\n    let newLabelsID: Array<string>;\r\n    if (selectedLabels.includes(labelID)) {\r\n      newLabelsID = selectedLabels.filter((id) => id !== labelID);\r\n    } else {\r\n      newLabelsID = [...selectedLabels, labelID];\r\n    }\r\n\r\n    if (noteID) {\r\n      db.ref(`notes/${userID}/${noteID}`).update({\r\n        labelsID: newLabelsID,\r\n      });\r\n    } else {\r\n      editNote(\"labelsID\", newLabelsID);\r\n    }\r\n  };\r\n\r\n  const onColorChange = (color: string) => {\r\n    if (noteID) {\r\n      db.ref(`notes/${userID}/${noteID}`).update({\r\n        color: color,\r\n      });\r\n    } else {\r\n      editNote(\"color\", color);\r\n    }\r\n  };\r\n\r\n  const removeButtonClick = () => {\r\n    noteID && deleteNote(userID, noteID);\r\n  };\r\n\r\n  const renderColors = () => {\r\n    let res = Object.keys(noteBackgroundColors).map((color, index) => {\r\n      return (\r\n        <Checkbox\r\n          classes={{ root: classes.colorCheckbox }}\r\n          style={{\r\n            borderColor: noteBackgroundColors[color],\r\n          }}\r\n          className={index === 0 ? classes.firstColorIcon : \"\"}\r\n          checked={choosenColor === color}\r\n          onChange={() => {\r\n            onColorChange(color);\r\n          }}\r\n          key={color}\r\n          color=\"primary\"\r\n          icon={<ColorPaletteIcon bgColor={noteBackgroundColors[color]} />}\r\n          checkedIcon={\r\n            <ColorPaletteIconChecked\r\n              className={classes.checkMarkColor}\r\n              checkMarkColor={noteBackgroundColors[color]}\r\n            />\r\n          }\r\n        />\r\n      );\r\n    });\r\n    return res;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.noteActionsWrapper}>\r\n        <div>\r\n          <Tooltip title=\"Change color\">\r\n            <IconButton\r\n              classes={{\r\n                root: classes.actionIcon,\r\n              }}\r\n              size=\"small\"\r\n              buttonRef={paletteIconRef}\r\n              onClick={() => {\r\n                setOpen(true);\r\n              }}\r\n            >\r\n              <PaletteIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Change label\">\r\n            <IconButton\r\n              classes={{\r\n                root: classes.actionIcon,\r\n              }}\r\n              size=\"small\"\r\n              buttonRef={labelIconRef}\r\n              onClick={() => {\r\n                setLabelPopoverOpen(true);\r\n              }}\r\n            >\r\n              <Label fontSize=\"small\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n          {showDeleteBtn && (\r\n            <Tooltip title=\"delete note\">\r\n              <IconButton\r\n                classes={{\r\n                  root: classes.actionIcon,\r\n                }}\r\n                size=\"small\"\r\n                onClick={() => {\r\n                  removeButtonClick();\r\n                }}\r\n              >\r\n                <DeleteIcon fontSize=\"small\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n          )}\r\n        </div>\r\n        { showCloseBtn && (<Button\r\n          size=\"small\"\r\n          classes={{\r\n            root: classes.closeButton,\r\n          }}\r\n          onClick={onCloseButtonClick}\r\n        >\r\n          Close\r\n        </Button>)}\r\n        \r\n      </div>\r\n\r\n      <Popover\r\n        anchorOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"left\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        anchorEl={paletteIconRef.current}\r\n        open={isOpen}\r\n        onClose={() => {\r\n          setOpen(false);\r\n        }}\r\n        classes={{\r\n          paper: classes.popover,\r\n        }}\r\n      >\r\n        <div className={classes.colorCheckboxWrapper}>{renderColors()}</div>\r\n      </Popover>\r\n      <Popover\r\n        anchorEl={labelIconRef.current}\r\n        open={isLabelPopoverOpen}\r\n        onClose={() => setLabelPopoverOpen(false)}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"right\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"left\",\r\n        }}\r\n      >\r\n        <div className={classes.noteLabelContainer}>\r\n          <Typography variant=\"subtitle2\">Label note</Typography>\r\n          <div className={classes.labelSearchInput}>\r\n            <InputBase\r\n              classes={{ root: classes.labelInputText }}\r\n              placeholder=\"Enter label name\"\r\n              value={labelName}\r\n              onChange={(event) => setLabelName(event.target.value)}\r\n              inputProps={{\r\n                maxLength: 15,\r\n              }}\r\n            />\r\n            <SearchIcon />\r\n          </div>\r\n          <div className={classes.newLabelWrapper}>\r\n            {allowAddLabel && (\r\n              <>\r\n                <Divider />\r\n                <Button\r\n                  onClick={() => {\r\n                    addLabel(userID, labelName, onLabelAddSuccess);\r\n                  }}\r\n                  size=\"small\"\r\n                  className={classes.newLabelBtn}\r\n                >\r\n                  <AddOutlined fontSize=\"small\" />\r\n                  <Typography variant=\"body2\">\r\n                    Create \"<b>{labelName}</b>\"\r\n                  </Typography>\r\n                </Button>\r\n              </>\r\n            )}\r\n            <List dense={true} component=\"div\">\r\n              {filteredLabels.map((label: any) => {\r\n                return (\r\n                  <ListItem\r\n                    key={label.labelID}\r\n                    button\r\n                    dense\r\n                    onClick={() => {\r\n                      handleLabelClick(label.labelID);\r\n                    }}\r\n                  >\r\n                    <ListItemIcon\r\n                      classes={{\r\n                        root: classes.labelIconCheckbox,\r\n                      }}\r\n                    >\r\n                      <Checkbox\r\n                        edge=\"start\"\r\n                        checked={selectedLabels.includes(label.labelID)}\r\n                        color=\"default\"\r\n                      />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={label.labelName} />\r\n                  </ListItem>\r\n                );\r\n              })}\r\n            </List>\r\n          </div>\r\n        </div>\r\n      </Popover>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  editNote: (fieldName: string, value: any) =>\r\n    dispatch(editNote(fieldName, value)),\r\n  addLabel,\r\n  deleteNote,\r\n});\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  labels: state.labels,\r\n  userID: state.auth.user.userID,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteActions);\r\n","import React, { useState, Dispatch } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  makeStyles,\r\n  Paper,\r\n  Collapse,\r\n  InputBase,\r\n  useTheme,  \r\n} from \"@material-ui/core\";\r\n\r\nimport NoteActions from \"./NoteActions\";\r\n\r\nimport {editNote} from 'store/actions/note';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  noteCreateContainer: {\r\n    maxWidth: theme.spacing(75),\r\n    margin: \"0 auto\",\r\n  },\r\n  wrapper: {\r\n    display: \"flex\",\r\n    flexFlow: \"column\",\r\n  },\r\n  noteTitleRoot: {\r\n    padding: theme.spacing(1.5, 2),\r\n  },\r\n  noteTitleInput: {\r\n    fontWeight: 500,\r\n    fontSize: \"1rem\",\r\n    padding: 0,\r\n    lineHeight: \"1rem\",\r\n    verticalAlign: \"middle\",\r\n    color: theme.palette.text.primary,\r\n  },\r\n  navBarClose: {\r\n    marginLeft: \"0\",\r\n  },\r\n  noteActionsWrapper: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst AddNoteForm: React.FC<{\r\n  isFocused: boolean;\r\n  setIsFocused: (value: any) => any;\r\n  selectedLabels: string[];\r\n  onAddLabelClick: (labelID: string) => void;\r\n  onCloseButtonClick: () => void;\r\n  variant?: \"elevation\" | \"outlined\";\r\n  editNote: (fieldName: string, value: string) => void;\r\n  noteTitle: string;\r\n  noteBody: string;\r\n  noteColor: string;\r\n}> = ({\r\n  editNote,\r\n  noteColor, \r\n  isFocused,  \r\n  noteBody,\r\n  setIsFocused,  \r\n  selectedLabels,\r\n  onCloseButtonClick,\r\n  variant = \"outlined\",  \r\n  noteTitle,\r\n}) => {\r\n\r\n  \r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  \r\n\r\n  return (\r\n    <div >\r\n      <Paper\r\n        className={classes.noteCreateContainer}\r\n        elevation={0}\r\n        variant={variant}\r\n        style={{\r\n          backgroundColor: theme.notePaletteColors.noteBackground[noteColor],\r\n        }}\r\n      >\r\n        <div>\r\n          <Collapse\r\n            classes={{ wrapperInner: classes.wrapper }}\r\n            in={isFocused}\r\n            collapsedHeight=\"3rem\"\r\n          >\r\n            <InputBase\r\n              placeholder={isFocused ? \"Title\" : \"Take a note...\"}\r\n              classes={{\r\n                root: classes.noteTitleRoot,\r\n                input: classes.noteTitleInput,\r\n              }}\r\n              onFocus={() => setIsFocused(true)}\r\n              value={noteTitle}\r\n              onChange={(event) => editNote('title', event.target.value)}\r\n            />\r\n            <InputBase\r\n              placeholder=\"Take a note...\"\r\n              classes={{\r\n                root: classes.noteTitleRoot,\r\n                input: classes.noteTitleInput,\r\n              }}\r\n              value={noteBody}\r\n              onChange={(event) => editNote('body', event.target.value)}\r\n              multiline\r\n            />\r\n            <NoteActions\r\n              selectedLabels={selectedLabels}\r\n              choosenColor={noteColor}\r\n              onCloseButtonClick={onCloseButtonClick}\r\n              showCloseBtn\r\n            />\r\n          </Collapse>\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({\r\n  editNote: (fieldName: string, value: string) => dispatch(editNote(fieldName, value))\r\n });\r\n\r\nexport default connect(null, mapDispatchToProps)(AddNoteForm);\r\n// export default AddNoteForm;\r\n","import React from \"react\";\r\nimport { Paper, useTheme, makeStyles } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nimport { setNoteEditPopup } from \"store/actions/note\";\r\nimport NoteActions from \"./NoteActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  item: {\r\n    position: 'relative' as 'relative',\r\n    width: theme.spacing(30),\r\n    margin: \".5rem\",\r\n    wordBreak: \"break-all\" as \"break-all\",\r\n  },\r\n  itemActions: {\r\n    position: \"absolute\" as \"absolute\",\r\n    width: '100%',\r\n    top: '100%',\r\n    transform: 'translateY(-100%)'\r\n  },\r\n  noteTitle: {\r\n    padding: theme.spacing(1.5, 2, 1),\r\n  },\r\n  noteBody: {\r\n    padding: theme.spacing(1, 2, 1),\r\n  },\r\n  labelsList: {\r\n    marginTop: theme.spacing(1.5),\r\n  },\r\n  labelItem: {\r\n    padding: \"2px 10px\",\r\n    display: \"inline-flex\",\r\n    cursor: \"pointer\",\r\n    borderRadius: \"12px\",\r\n    backgroundColor: \"rgba(0,0,0,0.08)\",\r\n    fontSize: \".875rem\",\r\n    color: theme.note.labelColor,\r\n    marginRight: \"5px\",\r\n    marginBottom: \"5px\",\r\n  },\r\n  noteItem: {\r\n    paddingBottom: '40px',\r\n  },\r\n}));\r\n\r\ninterface IProps {\r\n  note: any;\r\n  userID: string;\r\n  labels: object[];\r\n  setNoteEditPopup: (note: any) => void;\r\n  onCloseButtonClick: (evt: any) => void;\r\n  selectedLabels: string[];\r\n}\r\nconst NoteItem: React.FC<IProps> = (props) => {\r\n  const { color, id, title, body } = props.note;\r\n  const {\r\n    setNoteEditPopup,\r\n    labels,\r\n    selectedLabels,\r\n    onCloseButtonClick,\r\n  } = props;\r\n\r\n  const theme = useTheme();\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.item}>\r\n      <Paper\r\n        onClick={() => {\r\n          setNoteEditPopup(props.note);\r\n        }}\r\n        className={classes.noteItem}\r\n        style={{          \r\n          backgroundColor: theme.notePaletteColors.noteBackground[color],\r\n        }}\r\n      >\r\n        <div className={classes.noteTitle}>{title}</div>\r\n        <div className={classes.noteBody}>\r\n          {body}\r\n          <br />\r\n          <div className={classes.labelsList}>\r\n            {labels.map((label: any) => {\r\n              if (\r\n                props.note.labelsID &&\r\n                props.note.labelsID.includes(label.labelID)\r\n              ) {\r\n                return (\r\n                  <div key={label.labelID} className={classes.labelItem}>\r\n                    {label.labelName}\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n          </div>\r\n        </div>\r\n      </Paper>\r\n      <div className={classes.itemActions}>\r\n      <NoteActions\r\n        showDeleteBtn\r\n        noteID={id}\r\n        choosenColor={color}\r\n        onCloseButtonClick={onCloseButtonClick}\r\n        selectedLabels={selectedLabels}\r\n      />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  labels: state.labels,\r\n  userID: state.auth.user.userID,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  setNoteEditPopup: (note: any) => dispatch(setNoteEditPopup(note)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteItem);\r\n","import React from \"react\";\r\n\r\nimport NoteItem from \"./NoteItem\";\r\nimport { useTheme } from \"@material-ui/core\";\r\n\r\nconst NoteList: React.FC<{\r\n  filteredNotes: [];\r\n  selectedLabels: string[];\r\n  onCloseButtonClick: () => void;\r\n}> = ({ filteredNotes = [], selectedLabels, onCloseButtonClick }) => {\r\n  const theme = useTheme();\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        alignItems: \"flex-start\",\r\n        flexWrap: \"wrap\",\r\n        justifyContent: \"flex-start\",\r\n        marginTop: \"2rem\",\r\n      }}\r\n    >\r\n      {filteredNotes.map((note: any, index: number) => (\r\n        <NoteItem\r\n          key={note.id}\r\n          onCloseButtonClick={onCloseButtonClick}\r\n          selectedLabels={note.labelsID}          \r\n          note={note}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoteList;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Container,\r\n  Box,\r\n  makeStyles,\r\n  useTheme,\r\n  Dialog,\r\n  DialogContent,\r\n} from \"@material-ui/core\";\r\n\r\n\r\n\r\nimport AddNoteForm from \"./AddNoteForm\";\r\nimport NotesList from \"./NotesList\";\r\n\r\nimport { updateNote, createNote } from \"store/actions/note\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dialogContentRoot: {\r\n    padding: '0 !important'\r\n  },\r\n  noteCreateContainer: {\r\n    padding: theme.spacing(4, 0),\r\n    maxWidth: theme.spacing(75),\r\n    margin: \"0 auto\",\r\n  },\r\n  wrapper: {\r\n    display: \"flex\",\r\n    flexFlow: \"column\",\r\n  },\r\n  noteTitleRoot: {\r\n    padding: theme.spacing(1.5, 2),\r\n  },\r\n  noteTitleInput: {\r\n    fontWeight: 500,\r\n    fontSize: \"1rem\",\r\n    padding: 0,\r\n    lineHeight: \"1rem\",\r\n    verticalAlign: \"middle\",\r\n    color: theme.palette.text.primary,\r\n  },\r\n  navBarClose: {\r\n    marginLeft: \"0\",\r\n  },\r\n  noteActionsWrapper: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst NotesArea: React.FC<{\r\n  userID: string;\r\n  notesArray: any;\r\n  isNavBarOpen: boolean;\r\n  currentLabel?: string;\r\n\r\n  labels: object[],\r\n\r\n  newNoteLabels: string[];\r\n\r\n  updateNote: (userID: string, noteID: string, updatedNote: any) => void;\r\n  createNote: (userID: string, newNote: any) => void;\r\n\r\n  newNoteTitle: string;\r\n  newNoteBody: string;\r\n  newNoteColor: string;\r\n\r\n  editingNoteLabels: string[];\r\n  editingNoteTitle: string;\r\n  editingNoteBody: string;\r\n  editingNoteColor: string;\r\n  editingNoteID: string;\r\n\r\n  editNoteMode: boolean;\r\n}> = ({\r\n  newNoteTitle,\r\n  newNoteBody,\r\n  newNoteColor,\r\n  newNoteLabels,\r\n\r\n  editingNoteTitle,\r\n  editingNoteBody,\r\n  editingNoteColor,\r\n  editingNoteLabels,\r\n  editingNoteID,\r\n  editNoteMode,\r\n\r\n  createNote,\r\n  updateNote,\r\n\r\n\r\n  userID,\r\n  notesArray,\r\n  currentLabel,\r\n}) => {\r\n  const [isFocused, setIsFocused] = useState(false);  \r\n  const [selectedLabels, addToSelectedLabels] = useState<string[]>([]);\r\n\r\n  \r\n\r\n  const theme = useTheme();\r\n  const classes = useStyles();\r\n\r\n  const filteredNotes = () => {\r\n    if (currentLabel === \"all\") {\r\n      return notesArray;\r\n    }\r\n    return notesArray.filter((note: any) => {\r\n      return note.labelsID && note.labelsID.includes(currentLabel);\r\n    });\r\n  };\r\n\r\n\r\n  const onCloseEditNotePopup = () => {\r\n    let updatedNote = {\r\n      title: editingNoteTitle,\r\n      body: editingNoteBody,\r\n      color: editingNoteColor,\r\n      labelsID: editingNoteLabels || [],\r\n    };\r\n    updateNote(userID, editingNoteID, updatedNote);\r\n  };\r\n\r\n  const onCloseAddNoteForm = () => {\r\n    let newNote = {\r\n      title: newNoteTitle,\r\n      body: newNoteBody,\r\n      color: newNoteColor,\r\n      labelsID: newNoteLabels,\r\n    };\r\n    if (newNote.title || newNote.body) {\r\n      createNote(userID, newNote);\r\n    }    \r\n  };\r\n\r\n  const onAddLabelClick = (labelID: string) => {\r\n    if (selectedLabels.includes(labelID)) {\r\n      let newLabelsID = selectedLabels.filter((id) => id !== labelID);\r\n      addToSelectedLabels(newLabelsID);\r\n    } else {\r\n      addToSelectedLabels([...selectedLabels, labelID]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth={false}>\r\n      <Box>\r\n        <AddNoteForm\r\n          noteTitle={newNoteTitle}\r\n          noteBody={newNoteBody}\r\n          noteColor={newNoteColor}\r\n          setIsFocused={setIsFocused}\r\n          isFocused={isFocused}\r\n          selectedLabels={newNoteLabels}\r\n          onAddLabelClick={onAddLabelClick}\r\n          onCloseButtonClick={onCloseAddNoteForm}\r\n        />\r\n        <NotesList\r\n          filteredNotes={filteredNotes()}\r\n          selectedLabels={selectedLabels}\r\n          onCloseButtonClick={() => {}}\r\n        />\r\n        \r\n        <Dialog\r\n            open={editNoteMode}\r\n            fullWidth={true}          \r\n          >\r\n            <DialogContent \r\n              classes={{\r\n                root: classes.dialogContentRoot,\r\n              }}\r\n              \r\n              >\r\n              <AddNoteForm\r\n                noteTitle={editingNoteTitle}\r\n                noteBody={editingNoteBody}\r\n                noteColor={editingNoteColor}\r\n                setIsFocused={setIsFocused}\r\n                isFocused={true}\r\n                selectedLabels={editingNoteLabels}\r\n                onAddLabelClick={onAddLabelClick}\r\n                onCloseButtonClick={onCloseEditNotePopup}\r\n              />\r\n            </DialogContent>\r\n          </Dialog>\r\n        \r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  updateNote: (userID: string, noteID: string, updatedNote: any) =>\r\n    dispatch(updateNote(userID, noteID, updatedNote)),\r\n  createNote: (userID: string, newNote: any) =>\r\n    dispatch(createNote(userID, newNote)),\r\n});\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  labels: state.labels,\r\n  userID: state.auth.user.userID,\r\n\r\n  notesArray: state.note.items,\r\n  newNoteTitle: state.note.newNote.title,\r\n  newNoteBody: state.note.newNote.body,\r\n  newNoteColor: state.note.newNote.color,\r\n  newNoteLabels: state.note.newNote.labelsID,\r\n\r\n  editingNoteTitle: state.note.editingNote.title,\r\n  editingNoteBody: state.note.editingNote.body,\r\n  editingNoteColor: state.note.editingNote.color,\r\n  editingNoteLabels: state.note.editingNote.labelsID,\r\n  editingNoteID: state.note.editingNote.id,\r\n  editNoteMode: state.note.editNoteMode,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NotesArea);\r\n","import React, { useState } from 'react';\r\nimport LeftNavbar from 'components/LeftNavbar';\r\nimport AddNoteForm from 'components/notes/AddNoteForm';\r\n\r\nimport {\r\n makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { connect } from 'react-redux';\r\nimport NotesArea from './notes/NotesArea';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n mainArea: {\r\n  display: 'flex'\r\n }\r\n}))\r\n\r\n\r\n\r\nconst Main:React.FC<{\r\n isNavBarOpen: boolean;\r\n labels?: object[];\r\n}> = ({ isNavBarOpen, labels }) => {\r\n const classes = useStyles();\r\n const [currentLabel, setLabel] = useState<string>('all');\r\n\r\n \r\n \r\n return(\r\n  <>\r\n  <div style={{height: '100px'}}></div>\r\n  <main className={\r\n   classes.mainArea\r\n  }>   \r\n   <LeftNavbar labels={labels}  setLabel={setLabel} isNavBarOpen={isNavBarOpen} />\r\n   <NotesArea currentLabel={currentLabel} isNavBarOpen={isNavBarOpen}  />\r\n  </main>\r\n  </>\r\n )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n labels: state.labels\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(Main);\r\n\r\n","import React  from \"react\";\r\nimport { Popover, Typography, Avatar, makeStyles, useTheme, Divider, Button } from \"@material-ui/core\";\r\nimport { FaceOutlined as FaceIcon } from \"@material-ui/icons\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { signout } from \"store/actions/auth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  popover: {\r\n    width: theme.spacing(40),\r\n    background: theme.palette.primary.main,\r\n    borderRadius: theme.shape.borderRadius,\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    padding: theme.spacing(2),\r\n    flexFlow: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    width: theme.spacing(6),\r\n    height: theme.spacing(6),\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.background.default\r\n  },\r\n  iconColor: {\r\n   color: theme.palette.type === \"dark\" ? \"#949596\" : \"#5f6368\"\r\n  },\r\n  bottom: {\r\n   padding: theme.spacing(2),\r\n   display: 'flex',\r\n   justifyContent: 'center',\r\n   alignItems: 'center'\r\n  }\r\n}));\r\ninterface IProfile {\r\n  userName: string | null;\r\n  userEmail: string | null;\r\n  anchorEl: HTMLElement | null;\r\n  isOpen: boolean;\r\n  popoverOpenHandler: () => void;\r\n  signout: () => void;\r\n}\r\nconst Profile: React.FC<IProfile> = ({\r\n  anchorEl,\r\n  isOpen,\r\n  popoverOpenHandler,\r\n  userName,\r\n  userEmail,\r\n  signout\r\n}) => {\r\n  const classes = useStyles();  \r\n  return (\r\n    <div>\r\n      <Popover\r\n        open={isOpen}\r\n        classes={{\r\n          paper: classes.popover,\r\n        }}\r\n        anchorEl={anchorEl}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"center\",\r\n        }}\r\n        onClose={popoverOpenHandler}\r\n      >\r\n        <div className={classes.container}>\r\n          <Avatar className={classes.avatar}>\r\n            <FaceIcon className={classes.iconColor} fontSize=\"large\"></FaceIcon>\r\n          </Avatar>\r\n          <Typography variant=\"body1\"   color=\"textPrimary\">\r\n           {userName}\r\n          </Typography>\r\n          <Typography  variant=\"body2\"  color=\"textSecondary\">\r\n           {userEmail}\r\n          </Typography>\r\n        </div>\r\n        <Divider/>\r\n        <div className={classes.bottom}>\r\n         <Button  onClick={signout} variant=\"contained\">Sign out</Button>\r\n        </div>\r\n      </Popover>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n userName: state.auth.user.displayName,\r\n userEmail: state.auth.user.userEmail,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n signout: () => dispatch(signout())\r\n});\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Search as SearchIcon,\r\n  Close as CloseIcon,\r\n  AccountCircleOutlined as AccountIcon,\r\n} from \"@material-ui/icons\";\r\nimport {\r\n  makeStyles,\r\n  IconButton,\r\n  InputBase,\r\n  Box,\r\n  AppBar,\r\n  Toolbar,\r\n  useTheme,\r\n  ClickAwayListener,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  searchbarContainer: {\r\n    flexGrow: 1,\r\n    marginLeft: theme.spacing(1),\r\n    borderRadius: theme.shape.borderRadius,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    height: theme.spacing(6),\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      maxWidth: theme.spacing(90),\r\n      marginLeft: theme.spacing(10),\r\n    },\r\n  },\r\n  searchbarContainerActive: {\r\n    backgroundColor: \"#535456\",\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing(6),\r\n    height: \"100%\",\r\n    display: \"inline-flex\",\r\n    padding: theme.spacing(0, 2),\r\n  },\r\n  inputSearch: {\r\n    width: \"100%\",\r\n    maxWidth: \"100%\",\r\n  },\r\n}));\r\n\r\nconst SearchBar:React.FC<{\r\n onSearchClose?: () => void\r\n}> = ({onSearchClose}) => {\r\n  const theme = useTheme();\r\n  const classes = useStyles();\r\n  const [isFocused, setFocused] = useState(false);\r\n  return (\r\n    <ClickAwayListener onClickAway={() => setFocused(false)}>\r\n      <Box\r\n        className={classes.searchbarContainer}\r\n        bgcolor={\r\n          isFocused\r\n            ? theme.palette.background.default\r\n            : theme.palette.background.paper\r\n        }\r\n        boxShadow={isFocused ? 2 : 0}\r\n      >\r\n        <IconButton className={classes.searchIcon}>\r\n          <SearchIcon />\r\n        </IconButton>\r\n        <InputBase\r\n          onClick={() => setFocused(true)}\r\n          placeholder=\"Search\"\r\n          className={classes.inputSearch}\r\n        />\r\n        {isFocused && (\r\n          <IconButton onClick={onSearchClose}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        )}\r\n      </Box>\r\n    </ClickAwayListener>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from 'react';\r\nimport { KeepIcon } from \"components/icons\";\r\nimport { makeStyles, Typography } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n logoContainer: {\r\n  display: \"flex\",\r\n  justifyContent: \"stretch\",\r\n },\r\n title: {\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  marginLeft: theme.spacing(1),\r\n  fontWeight: 'bold' as 'bold'\r\n}\r\n}));\r\n\r\nconst Logo = () => {\r\n const classes = useStyles();\r\n return (\r\n   <div className={classes.logoContainer}>\r\n     <KeepIcon />\r\n     <Typography\r\n       color=\"textSecondary\"\r\n       className={classes.title}\r\n       variant=\"h6\"\r\n       noWrap\r\n     >\r\n       Keep\r\n     </Typography>\r\n   </div>\r\n );\r\n};\r\n\r\nexport default Logo;","import React, { useState, useRef } from \"react\";\r\nimport {\r\n  makeStyles,\r\n  useTheme,\r\n  Toolbar,\r\n  IconButton,\r\n  AppBar,\r\n  Typography,\r\n  useMediaQuery,\r\n  RootRef,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Menu as MenuIcon,\r\n  Search as SearchIcon,\r\n  Close as CloseIcon,\r\n  AccountCircleOutlined as AccountIcon,\r\n  Brightness4 as ThemeSwitchIcon\r\n} from \"@material-ui/icons\";\r\n\r\n\r\n\r\nimport Profile from \"./Profile\";\r\nimport SearchBar from \"./SearchBar\";\r\n\r\nimport Logo from 'components/Logo';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  containerBorder: {\r\n    borderBottomWidth: \"1px\",\r\n  },\r\n  menuButton: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n  },\r\n\r\n  logo: {\r\n    display: \"none\",\r\n    height: theme.spacing(5.5),\r\n    padding: theme.spacing(0, 1, 0, 0),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\",\r\n    },\r\n  },\r\n\r\n\r\n  themeColor: {\r\n    background: theme.palette.secondary.light,\r\n  },\r\n}));\r\n\r\n\r\n\r\nexport default (props: any) => {\r\n  const { switchTheme } = props;\r\n  const { setNavBarOpen, isNavBarOpen } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"xs\"));\r\n  const [isSearchActive, setSearchActive] = useState(false);\r\n  const [isProfilePopoverOpen, setProfilePopoverOpen] = React.useState<boolean>(\r\n    false\r\n  );\r\n\r\n  const profileIconRef = useRef<HTMLButtonElement | null>(null);\r\n\r\n  const popoverOpenHandler = (\r\n    event?: React.MouseEvent<HTMLButtonElement>\r\n  ): void => {\r\n    setProfilePopoverOpen(!isProfilePopoverOpen);\r\n  };\r\n\r\n  return (\r\n    <AppBar>\r\n      <Toolbar>\r\n        <IconButton\r\n          className={classes.menuButton}\r\n          edge=\"start\"\r\n          aria-label=\"open drawer\"\r\n          onClick={() => setNavBarOpen(!isNavBarOpen)}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        {isMobile ? (\r\n          isSearchActive ? (\r\n            <SearchBar onSearchClose={() => setSearchActive(false)} />\r\n          ) : (\r\n            <Logo />\r\n          )\r\n        ) : (\r\n          <>\r\n            <Logo />\r\n            <SearchBar />\r\n          </>\r\n        )}\r\n        <div className={classes.grow}></div>\r\n        {isMobile && !isSearchActive && (\r\n          <IconButton onClick={() => setSearchActive(true)}>\r\n            <SearchIcon />\r\n          </IconButton>\r\n        )}\r\n        <IconButton onClick={switchTheme}>\r\n          <ThemeSwitchIcon />\r\n        </IconButton>\r\n        <RootRef rootRef={profileIconRef}>\r\n          <IconButton onClick={popoverOpenHandler}>\r\n            <AccountIcon />\r\n          </IconButton>\r\n        </RootRef>\r\n        <Profile\r\n          popoverOpenHandler={popoverOpenHandler}\r\n          anchorEl={profileIconRef.current}\r\n          isOpen={isProfilePopoverOpen}\r\n        />\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n","import { createMuiTheme, responsiveFontSizes } from \"@material-ui/core\";\r\nimport { amber, red } from \"@material-ui/core/colors\";\r\n\r\nconst fontFamilyRoboto = {\r\n  fontFamily: [\r\n    \"Roboto\",\r\n    \"Arial\",\r\n    \"sans-serif\"\r\n  ].join(\",\"),\r\n};\r\n\r\ndeclare module \"@material-ui/core/styles/createMuiTheme\" {\r\n  interface Theme {\r\n    notePaletteColors: {\r\n      borderColor?: string;\r\n      firstIconBorderColor?: string;\r\n      checkMarkColor: string;\r\n      noteBackground: {\r\n        [key: string]: string;\r\n      };\r\n    };\r\n    note: {\r\n      labelColor: string;\r\n    }\r\n  }\r\n  interface ThemeOptions {\r\n    notePaletteColors: {\r\n      borderColor?: string;\r\n      firstIconBorderColor?: string;\r\n      checkMarkColor: string;\r\n      noteBackground: {\r\n        [key: string]: string;\r\n      };\r\n    };\r\n    note: {\r\n      labelColor: string;\r\n    }\r\n  }\r\n}\r\n\r\nconst lightMuiTheme = createMuiTheme({\r\n  notePaletteColors: {\r\n    borderColor: \"rgba(0,0,0,0.87)\",\r\n    firstIconBorderColor: '#e0e0e0',\r\n    checkMarkColor: 'rgba(0,0,0,0.4)',\r\n    noteBackground: {\r\n      default: \"#fff\",\r\n      red: \"#f28b82\",\r\n      orange: \"#fbbc04\",\r\n      yellow: \"#fff475\",\r\n\r\n      green: \"#ccff90\",\r\n      cyan: \"#fdcfe8\",\r\n      lightblue: \"#cbf0f8\",\r\n      darkblue: \"#aecbfa\",\r\n\r\n      purple: \"#d7aefb\",\r\n      pink: \"#fdcfe8\",\r\n      brown: \"#e6c9a8\",\r\n      grey: \"#e8eaed\"\r\n    },\r\n  },\r\n  note: {\r\n    labelColor: '#3c4043'\r\n  },\r\n  palette: {\r\n    type: \"light\",\r\n    primary: {\r\n      main: \"#FFF\",\r\n    },\r\n    secondary: {\r\n      main: amber[500],\r\n      light: \"#feefc3\",\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    background: {\r\n      default: \"#FFF\",\r\n      paper: \"#F1F3F4\",\r\n    },\r\n  },\r\n  typography: {\r\n    ...fontFamilyRoboto,\r\n    overline: {\r\n      fontWeight: 500,\r\n      fontSize: \"0.7rem\",\r\n    },\r\n  },\r\n  shape: {\r\n    borderRadius: 8,\r\n  },\r\n  zIndex: {\r\n    appBar: 1200,\r\n    drawer: 1100,\r\n  },\r\n});\r\n\r\nconst darkMuiTheme = createMuiTheme({\r\n  notePaletteColors: {\r\n    borderColor: 'rgba(255,255,255,0.87)',\r\n    firstIconBorderColor: '#5f6368',\r\n    checkMarkColor: 'rgb(154, 160, 166)',\r\n    noteBackground: {\r\n      default: \"#0000\",\r\n      red: \"#5C2B29\",\r\n      orange: \"#614A19\",\r\n      yellow: \"#635D18\",\r\n      green: \"#345920\",\r\n      cyan: \"#16504B\",\r\n      lightblue: \"#2D555E\",\r\n      darkblue: \"#1E3A5F\",\r\n      purple: \"#42275E\",\r\n      pink: \"#5B2245\",\r\n      brown: \"#442F19\",\r\n      grey: \"#3C3F43\",\r\n    },\r\n  },\r\n  note: {\r\n    labelColor: '#e8eaed'\r\n  },\r\n  palette: {\r\n    type: \"dark\",\r\n    primary: {\r\n      main: \"#202124\",\r\n    },\r\n    secondary: {\r\n      main: amber[500],\r\n      light: \"#41331C\",\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    background: {\r\n      default: \"#202124\",\r\n      paper: \"#535456\",\r\n    },\r\n    text: {\r\n      primary: \"#E8EAED\",\r\n      secondary: \"#FFFFFFDE\",\r\n    },\r\n  },\r\n  typography: {\r\n    ...fontFamilyRoboto,\r\n    overline: {\r\n      fontWeight: 500,\r\n      fontSize: \"0.7rem\",\r\n    },\r\n  },\r\n  shape: {\r\n    borderRadius: 8,\r\n  },\r\n  zIndex: {\r\n    appBar: 1200,\r\n    drawer: 1100,\r\n  },\r\n\r\n  overrides: {\r\n    MuiListItemText: {\r\n      primary: {\r\n        ...fontFamilyRoboto,\r\n        fontWeight: 500,\r\n        fontSize: \"0.87rem\",\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport const light = responsiveFontSizes(lightMuiTheme);\r\nexport const dark = responsiveFontSizes(darkMuiTheme);\r\n","import React from \"react\";\r\nimport { CircularProgress, makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  progress: {\r\n    position: \"fixed\" as \"fixed\",\r\n    width: '100%',\r\n    height: '100%',\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  }\r\n}));\r\n\r\nconst Loading = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.progress}>\r\n      <CircularProgress color=\"inherit\"/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport {\n  ThemeProvider,\n  CssBaseline,\n  createMuiTheme,\n} from \"@material-ui/core\";\n\nimport { authSuccess } from \"store/actions/auth\";\nimport { configDatabase } from \"store/actions/database\";\nimport { auth } from \"services/firebase\";\n\nimport Login from \"components/login/Login\";\nimport Main from \"components/Main\";\n\nimport AppBar from \"components/navbar/AppBar\";\n\nimport { dark, light } from \"components/theme\";\nimport Loading from \"components/Loading\";\n\nlet theme = createMuiTheme();\n\n\n\nconst App = ({ isLoggedIn, authSuccess, configDatabase  }) => {\n  const [isDarkMode, setThemeMode] = useState(false);\n  const [isAuthenticating, setIsAuthenticating] = useState(true);\n  const [isNavBarOpen, setNavBarOpen] = useState<boolean>(true);\n  const setTheme = () => {\n    setThemeMode(!isDarkMode);\n  };\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      if (user) {\n        authSuccess(user);\n        configDatabase();        \n        setIsAuthenticating(false);        \n      } else {\n        setIsAuthenticating(false);        \n      }\n      \n    });\n\n    return () => unsubscribe();\n  }, []);\n\n  if (isAuthenticating) return <Loading />;\n\n  return (\n    <>\n      <CssBaseline />\n      {isLoggedIn ? (\n        <ThemeProvider theme={isDarkMode ? dark : light}>\n          <CssBaseline />\n          <AppBar\n            switchTheme={setTheme}\n            isNavBarOpen={isNavBarOpen}\n            setNavBarOpen={setNavBarOpen}\n          />\n          <Main isNavBarOpen={isNavBarOpen} />\n        </ThemeProvider>\n      ) : (\n        <Login />\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = (state: any) => ({\n  isLoggedIn: state.auth.user.isLoggedIn,\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  authSuccess: (user: any) => dispatch(authSuccess(user)),\n  configDatabase: () => dispatch(configDatabase()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { ThunkDispatch } from \"redux-thunk\";\r\n\r\nimport { db, auth } from \"services/firebase\";\r\nimport { EMPTY_NOTES, NOTES_RECEIVED, LABELS_RECEIVED } from './types';\r\n\r\nexport const configDatabase = () => (dispatch: ThunkDispatch<{}, {}, any>) => {\r\n  if (auth.currentUser) {\r\n    db.ref(`labels/${auth.currentUser.uid}`).on(\"value\", (snap) => {\r\n      if (snap.val()) {\r\n        let labelsArray: any = [];\r\n        snap.forEach((element) => {\r\n          let label = { ...element.val(), labelID: element.key };\r\n          labelsArray.push(label);\r\n        });\r\n        dispatch({\r\n          type: LABELS_RECEIVED,\r\n          payload: labelsArray,\r\n        });\r\n      }\r\n    });\r\n\r\n\r\n\r\n\r\n    db.ref(`notes/${auth.currentUser.uid}`).on(\"value\", (snap) => {\r\n      if (snap.val()) {\r\n        let notesArray: any = [];\r\n        snap.forEach((element) => {\r\n          let note = { ...element.val(), id: element.key };\r\n          notesArray.push(note);\r\n        });\r\n        dispatch({\r\n          type: NOTES_RECEIVED,\r\n          payload: notesArray,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: EMPTY_NOTES\r\n        })        \r\n      }\r\n    });\r\n  }\r\n};\r\n","import { Reducer, AnyAction } from \"redux\";\r\nimport {\r\n  AUTH_IN_PROGRESS,\r\n  SIGNIN_SUCCESS,\r\n  AUTH_ERROR_MESSAGE,\r\n  SIGNOUT_SUCCESS,\r\n} from \"store/actions/types\";\r\n\r\ninterface IStore {\r\n  user: {\r\n    isLoggedIn: boolean;\r\n    displayName: string | null;\r\n    userEmail: string | null;\r\n    userID: string | null;\r\n  };\r\n  inProgress: boolean;\r\n  authMessage: string;\r\n  authMessageType: \"success\" | \"error\";\r\n}\r\n\r\nconst InitialState: IStore = {\r\n  user: {\r\n    isLoggedIn: false,\r\n    displayName: null,\r\n    userEmail: null,\r\n    userID: null,\r\n  },\r\n  inProgress: false,\r\n  authMessage: \"\",\r\n  authMessageType: \"error\",\r\n};\r\n\r\nconst authReducer: Reducer<IStore> = (\r\n  state: IStore = InitialState,\r\n  action: AnyAction\r\n): IStore => {\r\n  switch (action.type) {\r\n    case AUTH_IN_PROGRESS:\r\n      return {\r\n        ...state,\r\n        inProgress: action.payload,\r\n      };\r\n    case SIGNIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: {\r\n          ...state.user,\r\n          isLoggedIn: true,\r\n          displayName: action.payload.displayName,\r\n          userEmail: action.payload.email,\r\n          userID: action.payload.uid,\r\n        },\r\n      };\r\n    case SIGNOUT_SUCCESS:\r\n      return {\r\n        ...InitialState,\r\n        user: InitialState.user,\r\n      };\r\n    case AUTH_ERROR_MESSAGE:\r\n      return {\r\n        ...state,\r\n        authMessage: action.payload.message,\r\n        authMessageType: action.payload.messageType,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import { Reducer, AnyAction } from \"redux\";\r\nimport { LABELS_RECEIVED } from \"store/actions/types\";\r\n\r\ntype  IStore = object[]\r\n\r\nconst InitialState: IStore = [];\r\n\r\nconst labelsReducer: Reducer<IStore> = (\r\n  state: IStore = InitialState,\r\n  action: AnyAction\r\n): IStore => {\r\n  switch (action.type) {\r\n    case LABELS_RECEIVED:\r\n    {\r\n     return action.payload;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default labelsReducer;\r\n\r\n\r\n\r\n// db.ref('labels').on('value', (snap) => {\r\n//  console.log('recive value', snap.val());\r\n// });","import { Reducer, AnyAction } from \"redux\";\r\nimport {SIGNOUT_SUCCESS} from \"store/actions/types\";\r\nimport { initializeApp } from \"firebase\";\r\ninterface IStore {\r\n  items: object[];\r\n  newNote: {\r\n    title: string;\r\n    body: string;\r\n    color: string;\r\n    labelsID: string[];\r\n  },\r\n  editingNote: {\r\n    id: string;\r\n    title: string;\r\n    body: string;\r\n    color: string;\r\n    labelsID: string[];\r\n  };\r\n  editNoteMode: boolean;\r\n}\r\n\r\nconst InitialState: IStore = {\r\n  items: [],\r\n  editNoteMode: false,\r\n  newNote: {\r\n    title: \"\",\r\n    body: \"\",\r\n    color: \"default\",\r\n    labelsID: [],\r\n  },\r\n  editingNote: {\r\n    id: '',\r\n    title: \"\",\r\n    body: \"\",\r\n    color: \"default\",\r\n    labelsID: [],\r\n  }\r\n};\r\n\r\nconst notesReducer: Reducer<IStore> = (\r\n  state: IStore = InitialState,\r\n  action: AnyAction\r\n): IStore => {\r\n  switch (action.type) {\r\n    case \"NOTES_RECEIVED\": {\r\n      return {\r\n        ...state,\r\n        items: action.payload,\r\n        newNote: {...InitialState.newNote, labelsID: [...InitialState.newNote.labelsID]}\r\n      };\r\n    }\r\n    case 'EMPTY_NOTES': {\r\n      return {\r\n        ...state,\r\n        items: [],\r\n      }\r\n    }\r\n    case \"EDIT_NOTE\": {\r\n      const currentForm = state.editNoteMode ? \"editingNote\" : \"newNote\";    \r\n      return {\r\n        ...state,\r\n        [currentForm]: {\r\n          ...state[currentForm],\r\n          [action.payload.fieldName]: typeof action.payload.value === \"string\" ? action.payload.value : [...action.payload.value],\r\n        },\r\n      };\r\n    }\r\n    case \"NOTE_EDIT_POPUP\": {\r\n      return {\r\n        ...state,\r\n        editNoteMode: true,\r\n        editingNote: {\r\n          ...state.editingNote,\r\n          title: action.payload.title, \r\n          body: action.payload.body, \r\n          color: action.payload.color, \r\n          id: action.payload.id,\r\n          labelsID: action.payload.labelsID\r\n        },\r\n    }            \r\n      };\r\n    case 'CLOSE_NOTE_EDIT_POPUP': {\r\n      return {\r\n        ...state, \r\n        editNoteMode: false,\r\n      }\r\n    }\r\n    case SIGNOUT_SUCCESS: \r\n    return {\r\n      ...InitialState, \r\n      newNote: {...InitialState.newNote},\r\n      editingNote: {...InitialState.editingNote}\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default notesReducer;\r\n\r\n// db.ref('labels').on('value', (snap) => {\r\n//  console.log('recive value', snap.val());\r\n// });\r\n","import { combineReducers } from \"redux\";\r\nimport { SIGNOUT_SUCCESS } from 'store/actions/types';\r\n\r\nimport authReducer from \"./authReducer\";\r\nimport labelsReducer from \"./labelsReducer\";\r\nimport notesReducer from \"./notesReducer\";\r\n\r\n// export default combineReducers({\r\n//   auth: authReducer,\r\n//   labels: labelsReducer,\r\n//   note: notesReducer\r\n// });\r\n\r\n\r\nconst appReducer = combineReducers({\r\n  auth: authReducer,\r\n  labels: labelsReducer,\r\n  note: notesReducer\r\n});\r\n\r\nconst rootReducer = (state: any, action: any) => {\r\n  if (action.type === SIGNOUT_SUCCESS) {\r\n    state = undefined;\r\n  }\r\n  return appReducer(state, action);\r\n};\r\n\r\nexport default rootReducer;","\r\nimport { compose, createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport rootReducer from 'store/reducers';\r\n\r\n\r\nconst composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__|| compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\n//window.store = store;\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"App\";\n\n\n\nimport { Provider } from \"react-redux\";\n\nimport store from \"store\";\n\n\n// auth example google\n//https://medium.com/better-programming/dead-simple-auth-with-react-and-firebase-592e40ff43c5\n//https://medium.com/better-programming/dead-simple-auth-with-react-and-firebase-part-ii-c32963e21e16\n\n//googlekeep-anselm94.herokuapp.com\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  rootElement\n);\n"],"sourceRoot":""}